# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: gradle:8.3.0-jdk17

before_script:
  - cd ./ars
  - export GRADLE_USER_HOME="$(pwd)/.gradle"

stages:
  - build
  - test
  # - sonarqube-check
  # - sonarqube-vulnerability-report
  - sonar
  - deploy

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script: gradle check
  artifacts:
    when: always
    paths:
      - build/reports/
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - build
      - .gradle


# sonarqube-check:
#   stage: sonarqube-check
#   image: gradle:8.2.0-jdk17-jammy
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: gradle sonar
#   allow_failure: true
#   only:
#     - merge_requests
#     - master
#     - main
#     - develop

# sonarqube-vulnerability-report:
#   stage: sonarqube-vulnerability-report
#   script:
#     - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=xTrack&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
#   allow_failure: true
#   only:
#     - merge_requests
#     - master
#     - main
#     - develop
#   artifacts:
#     expire_in: 1 day
#     reports:
#       sast: gl-sast-sonar-report.json
#   dependencies:
#     - sonarqube-check

sonar:
  stage: test
  script:
    - gradle sonar -Pcoverage -Dsonar.host.url=$sonar_url -Dsonar.token=$sonar_token --info
  cache:
    key: "$CI_COMMIT_BRANCH"
    policy: pull
    paths:
      - build
      - .gradle
  dependencies:
    - test

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
